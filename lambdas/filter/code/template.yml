AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SkogApp Teig Filter SAM Template for AWS Lambda and API Gateway

Resources:
  SkogAppTeigFilter:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: 'Find th eForest GeoJSON based on given Kommunenummer and Matrikkelnummer'
      FunctionName: SkogAppTeigFilter
      MemorySize: 128
      Timeout: 5
      Handler: lambda_function.lambda_handler
      Runtime: python3.11
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      Environment:
        Variables:
          POSTGIS_DBNAME: !Sub "{{resolve:secretsmanager:arn:aws:secretsmanager:eu-north-1:992382379679:secret:skogapp-api/postgis/v1-YIsWHZ:SecretString:POSTGIS_DBNAME}}"
          POSTGIS_HOST: !Sub "{{resolve:secretsmanager:arn:aws:secretsmanager:eu-north-1:992382379679:secret:skogapp-api/postgis/v1-YIsWHZ:SecretString:POSTGIS_HOST}}"
          POSTGIS_PASSWORD: !Sub "{{resolve:secretsmanager:arn:aws:secretsmanager:eu-north-1:992382379679:secret:skogapp-api/postgis/v1-YIsWHZ:SecretString:POSTGIS_PASSWORD}}"
          POSTGIS_USERNAME: !Sub "{{resolve:secretsmanager:arn:aws:secretsmanager:eu-north-1:992382379679:secret:skogapp-api/postgis/v1-YIsWHZ:SecretString:POSTGIS_USERNAME}}"
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      Layers:
        - arn:aws:lambda:eu-north-1:992382379679:layer:psycopg2:1
        - arn:aws:lambda:eu-north-1:992382379679:layer:shapely:1
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-north-1:992382379679:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:eu-north-1:992382379679:log-group:/aws/lambda/SkogAppTeigFilter:*
            - Sid: AWSLambdaVPCAccessExecutionPermissions
              Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                - ec2:CreateNetworkInterface
                - ec2:DescribeNetworkInterfaces
                - ec2:DescribeSubnets
                - ec2:DeleteNetworkInterface
                - ec2:AssignPrivateIpAddresses
                - ec2:UnassignPrivateIpAddresses
              Resource: '*'
      SnapStart:
        ApplyOn: None
      VpcConfig:
        SecurityGroupIds:
          - sg-038b9a5368c362453
        SubnetIds:
          - subnet-041df92fe43a65071
          - subnet-018ba468c4eb92cc7
          - subnet-0a48cf26e0eafe0cf
        Ipv6AllowedForDualStack: false
      Events:
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref SkogAppApi
            Path: /filter
            Method: POST
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto

  SkogAppApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: SkogAppApi
      StageName: Prod
      EndpointConfiguration: REGIONAL
      Cors:
        AllowMethods: "'POST,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"